package #{package}.#{name-lower};

import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

public abstract class AbstractCommand implements CommandExecutor {

	private final String command;
	private String permission;
	private int requiredArgs;
	private String usage;
	private boolean consoleUse;

	public AbstractCommand(String cmd) {
		this.command = cmd;
		this.permission = null;
		this.requiredArgs = 0;
		this.usage = null;
		this.consoleUse = true;
	}

	public void permission(String perm) {
		this.permission = perm;
	}

	public void usage(String usage) {
		this.usage = usage;
	}

	public void args(int args) {
		this.requiredArgs = args;
	}

	public void console(boolean console) {
		this.consoleUse = console;
	}

	public String getCommand() {
		return command;
	}

	public String getPermission() {
		return permission;
	}

	public int getRequiredArgs() {
		return requiredArgs;
	}

	public String getUsage() {
		return usage;
	}

	public boolean canConsoleUse() {
		return consoleUse;
	}

	public boolean onCommand(CommandSender sender, Command cmd, String str, String[] args) {
		if (!consoleUse && !checkSender(sender, true)) {
			return true;
		}
		if (!checkPermission(sender, permission, true)) {
			return true;
		}
		if (args.length < requiredArgs) {
			sendUsage(sender);
			return true;
		}
		try {
			execute(sender, args);
		} catch (Exception ex) {
		}
		return true;
	}

	public String getMessage(String key, Object... args) {
		return Messages.getMessage(command + "." + key, args);
	}

	public void sendMessage(CommandSender sender, String key, Object... args) {
		Messages.sendCMessage(sender, command + "." + key, args);
	}

	public void sendUsage(CommandSender sender) {
		Messages.sendCMessage(sender, null, "gen.usage-format", usage == null ? "/" + command : usage);
	}

	public boolean checkPermission(CommandSender sender, String perm, boolean message) {
		if (perm == null || !(checkSender(sender, false)) || sender.hasPermission(perm)) {
			return true;
		}
		if (message) {
			Messages.sendCMessage(sender, null, "gen.no-permission");
		}
		return false;
	}

	public boolean checkSender(CommandSender sender, boolean message) {
		if (sender instanceof Player) {
			return true;
		}
		if (message) {
			Messages.sendCMessage(sender, null, "gen.console-restricted");
		}
		return false;
	}

	public abstract void execute(CommandSender sender, String[] args);

}